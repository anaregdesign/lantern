// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/anaregdesign/lantern/server/service"
	"google.golang.org/grpc"
	"net"
)

// Injectors from wire.go:

func initializeLanternServer() (*service.LanternServer, error) {
	graphCache := service.NewGraphCache()
	lanternService := newLanternService(graphCache)
	v := newGrpcServerOptions()
	server := newGrpcServer(v)
	listener, err := newListener()
	if err != nil {
		return nil, err
	}
	lanternServer := newLanternServer(lanternService, server, listener)
	return lanternServer, nil
}

// wire.go:

func newListener() (net.Listener, error) {
	return net.Listen("tcp", ":8080")
}

func newGrpcServerOptions() []grpc.ServerOption {
	return []grpc.ServerOption{}
}

func newGrpcServer(options []grpc.ServerOption) *grpc.Server {
	return grpc.NewServer(options...)
}

func newLanternService(cache *service.GrpcGraphCache) *service.LanternService {
	return service.NewLanternService(cache)
}

func newLanternServer(svc *service.LanternService, s *grpc.Server, listener net.Listener) *service.LanternServer {
	return service.NewLanternServer(svc, s, listener)
}
